import matplotlib.pyplot as plt
import numpy as np

# Data for 300 generations
generations = np.arange(1, 301)
best_fitness = [
    213.056, 214.637, 219.146, 203.84, 201.989, 208.473, 211.81, 204.754, 199.421, 201.153,
    200.984, 194.119, 196.913, 193.537, 186.318, 189.527, 194.047, 180.737, 185.898, 180.075,
    184.46, 176.715, 181.99, 188.366, 180.449, 180.15, 180.234, 184.996, 179.938, 189.11,
    181.453, 179.139, 178.252, 177.776, 178.745, 177.926, 184.181, 179.583, 171.446, 173.929,
    178.322, 179.886, 178.255, 180.416, 183.225, 176.005, 168.464, 169.228, 172.874, 176.356,
    181.232, 181.376, 178.063, 176.108, 168.945, 173.317, 173.177, 173.047, 180.162, 172.773,
    177.531, 171.429, 174.551, 171.816, 175.648, 173.501, 170.517, 167.169, 171.951, 176.963,
    173.212, 172.225, 176.003, 179.272, 174.705, 179.161, 172.433, 176.081, 163.487, 174.195,
    170.205, 171.445, 165.804, 170.631, 173.005, 177.174, 164.972, 165.825, 168.149, 174.211,
    169.766, 172.818, 171.298, 171.574, 168.739, 170.011, 174.706, 176.459, 171.585, 169.12,
    169.381, 176.374, 166.489, 164.372, 173.724, 164.54, 170.89, 171.201, 170.865, 180.656,
    172.362, 168.629, 169.063, 168.491, 167.637, 171.177, 167.356, 167.85, 167.678, 179.846,
    171.16, 177.495, 167.429, 172.185, 160.592, 174.351, 169.58, 172.62, 166.318, 160.179,
    164.638, 170.31, 169.594, 167.21, 167.615, 173.118, 174.533, 174.302, 175.954, 170.266,
    160.454, 172.693, 167.714, 166.429, 168.381, 161.777, 176.245, 163.463, 168.617, 173.885,
    164.504, 172.718, 162.204, 163.536, 169.115, 166.42, 173.658, 170.329, 166.247, 165.169,
    169.29, 165.179, 173.852, 175.422, 167.393, 167.379, 168.617, 166.768, 173.665, 167.734,
    169.463, 160.186, 170.124, 168.603, 170.344, 163.167, 167.041, 159.948, 164.506, 166.785,
    168.971, 168.382, 165.876, 163.599, 158.844, 167.691, 161.742, 163.103, 165.72, 169.188,
    168.336, 168.304, 160.195, 166.121, 163.342, 175.995, 165.528, 164.106, 175.666, 166.906,
    166.115, 162.779, 171.725, 173.362, 160.495, 165.338, 164.326, 174.288, 163.435, 165.958,
    171.078, 168.085, 159.829, 165.083, 161.415, 170.581, 173.382, 169.054, 169.992, 159.882,
    169.181, 161.438, 164.313, 163.134, 164.058, 165.303, 162.207, 159.287, 164.055, 160.264,
    165.168, 163.483, 164.991, 159.547, 164.111, 164.396, 172.978, 168.268, 162.551, 168.736,
    163.177, 165.479, 161.974, 165.297, 164.099, 170.241, 164.607, 166.199, 160.542, 162.349,
    170.836, 164.366, 164.312, 165.355, 173.092, 158.732, 164.048, 169.418, 161.972, 167.425,
    174.711, 166.819, 159.579, 171.966, 165.903, 163.539, 162.066, 169.691, 168.778, 168.865,
    163.079, 164.124, 168.127, 167.508, 170.719, 171.142, 167.978, 173.231, 164.497, 166.079,
    169.208, 157.55, 166.215, 158.665, 164.244, 160.667, 159.131, 160.745, 169.074, 161.863,
    162.146, 165.144, 159.84, 161.273, 170.14, 163.221, 161.058, 166.442, 158.261, 166.757
]


average_fitness = [
    307.16, 296.642, 306.61, 284.634, 276.204, 272.21, 268.654, 260.848, 255.341, 257.23,
    247.252, 242.829, 243.145, 234.165, 232.311, 230.164, 231.527, 222.659, 224.996, 222.369,
    217.929, 213.406, 212.38, 217.654, 211.407, 211.111, 205.855, 211.356, 206.975, 211.504,
    206.839, 204.403, 201.155, 201.706, 198.791, 198.017, 203.846, 198.949, 194.103, 192.833,
    198.48, 200.726, 197.638, 198.318, 198.994, 193.568, 185.344, 187.21, 189.766, 191.961,
    198.008, 198.156, 193.203, 190.933, 187.296, 187.264, 190.741, 188.14, 198.335, 190.186,
    192.367, 185.491, 189.347, 185.558, 189.992, 189.485, 186.736, 183.19, 188.277, 189.528,
    188.762, 185.536, 187.729, 190.949, 185.512, 192.626, 184.817, 188.026, 179.843, 187.583,
    183.255, 184.683, 179.61, 184.173, 186.265, 190.575, 178.342, 181.56, 181.962, 188.584,
    183.995, 184.286, 184.157, 184.257, 181.554, 184.081, 189.52, 189.83, 184.717, 181.17,
    182.822, 190.308, 178.822, 176.637, 184.638, 176.515, 182.803, 183.334, 184.084, 191.856,
    186.222, 181.923, 181.678, 183.39, 180.175, 187.658, 181.785, 183.393, 180.248, 190.785,
    183.078, 189.957, 179.786, 184.999, 172.517, 185.148, 180.798, 183.491, 177.395, 171.401,
    177.002, 182.9, 182.094, 180.507, 178.122, 186.871, 188.65, 185.043, 187.105, 182.417,
    172.484, 184.389, 179.574, 179.846, 180.638, 174.338, 187.866, 176.227, 181.238, 184.387,
    175.643, 183.938, 172.64, 174.219, 180.001, 177.567, 183.373, 181.422, 175.453, 176.146,
    181.058, 176.859, 185.518, 187.426, 178.517, 177.622, 178.816, 179.685, 185.191, 180.933,
    184.024, 172.727, 184.976, 181.385, 184.847, 174.38, 179.035, 171.47, 175.655, 180.709,
    183.265, 180.389, 179.372, 176.364, 172.276, 180.039, 173.444, 176.351, 179.164, 180.934,
    180.186, 181.477, 174.473, 179.564, 176.888, 188.164, 178.911, 177.058, 188.463, 180.012,
    181.087, 175.919, 184.571, 184.875, 173.405, 177.02, 178.038, 186.045, 175.853, 178.776,
    183.191, 179.829, 172.692, 176.24, 173.334, 181.751, 184.703, 182.311, 182.785, 172.527,
    181.018, 173.778, 177.228, 176.249, 176.799, 178.985, 175.137, 172.753, 180.625, 173.042,
    177.636, 175.443, 176.855, 173.657, 175.825, 176.277, 185.014, 179.686, 173.561, 180.548,
    174.972, 176.653, 173.972, 176.827, 176.138, 181.259, 177.448, 177.93, 171.945, 173.711,
    181.392, 176.994, 176.885, 179.332, 185.505, 171.913, 177.139, 182.466, 176.356, 179.713,
    187.049, 179.149, 171.934, 183.101, 178.745, 177.807, 177.367, 183.532, 179.922, 179.966,
    174.574, 176.46, 180.578, 179.382, 181.955, 181.778, 180.376, 185.56, 176.374, 178.576,
    182.121, 170.645, 178.408, 171.896, 177.074, 173.455, 171.759, 172.036, 182.779, 175.031,
    174.688, 179.331, 173.732, 175.267, 184.397, 177.551, 174.851, 179.225, 171.978, 179.564
]


base_fitness = 200.098
zero_fitness = 347.401







# Plotting the graph
plt.rcParams.update({
    'font.size': 14,  # Adjust to meet specific size requirements
    'font.family': 'serif',  # Professional fonts: serif, Arial, Times New Roman, etc.
})
plt.figure(figsize=(12, 6))
plt.plot(generations, best_fitness, label='Best Fitness', color='blue', marker='o', linestyle='-', markersize=3)
plt.plot(generations, average_fitness, label='Average Fitness', color='red', marker='o', linestyle='-', markersize=3)
plt.title('Genetic Algorithm Fitness Over 300 Generations')
plt.axhline(y=base_fitness, color='green', linestyle='-', label='Baseline fitness')
plt.axhline(y=zero_fitness, color='purple', linestyle='-', label='Zero Fitness')
plt.xlabel('Generation')
plt.ylabel('Fitness (Avg. Centi-pawn loss)')
plt.legend()
plt.grid(False)
plt.show()