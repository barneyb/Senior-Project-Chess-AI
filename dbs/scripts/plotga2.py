import matplotlib.pyplot as plt
import numpy as np

# Data for 300 generations
generations = np.arange(1, 201)
generations2 = np.arange(1, 200)
best_fitness = [
    3.0, -5.0, 2.0, 23.0, 16.0, 8.0, 12.0, 17.0, 30.0, 25.0,
    23.0, 25.0, 25.0, 13.0, 29.0, 23.0, 17.0, 18.0, 14.0, 8.0,
    31.0, 30.0, 25.0, 17.0, 31.0, 19.0, 28.0, 31.0, 25.0, 24.0,
    32.0, 31.0, 22.0, 37.0, 38.0, 22.0, 22.0, 25.0, 23.0, 40.0,
    20.0, 35.0, 31.0, 40.0, 33.0, 22.0, 24.0, 18.0, 15.0, 23.0,
    25.0, 23.0, 22.0, 33.0, 25.0, 32.0, 29.0, 30.0, 27.0, 41.0,
    36.0, 20.0, 41.0, 31.0, 27.0, 26.0, 28.0, 36.0, 24.0, 21.0,
    25.0, 24.0, 32.0, 35.0, 29.0, 45.0, 33.0, 19.0, 24.0, 24.0,
    29.0, 15.0, 34.0, 19.0, 25.0, 22.0, 26.0, 16.0, 16.0, 33.0,
    29.0, 25.0, 50.0, 18.0, 16.0, 8.0, 31.0, 23.0, 23.0, 6.0,
    20.0, 24.0, 15.0, 10.0, 26.0, 9.0, 21.0, 33.0, 8.0, 11.0,
    21.0, 32.0, 18.0, 8.0, 12.0, 36.0, 14.0, 8.0, 38.0, 16.0,
    13.0, 22.0, 16.0, 11.0, 21.0, 20.0, 16.0, 17.0, 19.0, 17.0,
    13.0, 22.0, 21.0, 25.0, 14.0, 10.0, 7.0, 22.0, 5.0, 10.0,
    10.0, 26.0, 11.0, 15.0, 20.0, 26.0, 28.0, 38.0, 25.0, 13.0,
    12.0, 21.0, 14.0, 10.0, 21.0, 16.0, 13.0, 16.0, 32.0, 29.0,
    37.0, 18.0, 28.0, 10.0, 7.0, 22.0, 5.0, 10.0, 10.0, 26.0,
    11.0, 15.0, 20.0, 28.0, 25.0, 13.0, 12.0, 21.0, 14.0, 21.0,
    20.0, 16.0, 13.0, 16.0, 19.0, 25.0, 14.0, 10.0, 20.0, 21.0,
    16.0, 32.0, 29.0, 37.0, 18.0, 28.0, 10.0, 7.0, 22.0, 20.0
]

average_fitness = [
    -29.85, -26.15, -36.65, -27.15, -20.75, -24.95, -25.75, -14.25, -14.6, -10.7,
    -11.95, -17.45, -8.3, -14.45, -16.95, -6.95, -26.55, -31.45, -21.5, -31.85,
    -21.3, -11.25, -4.75, -4.05, -10.4, -4.7, -6.1, 0.9, -6.85, -5.25,
    -8.1, -10.4, 0.3, -13.4, -14.65, -12.4, -10.85, -19.85, -16.6, -16.6,
    -5.95, 1.85, -6.9, 0.05, -1.7, -2.1, 0.1, -10.25, -17.25, -12.6,
    -11.7, -13.95, -3.25, -2.45, -5.95, -3.15, 0.75, -1.75, 3.7, 5.05,
    3.85, 2.9, 8.3, -11.3, -6.0, -2.75, 3.55, -5.55, 3.7, -4.85,
    -1.8, -3.45, -7.0, 3.95, -5.0, 2.3, -13.4, -8.9, -11.15, -22.8,
    -7.45, -21.55, -3.45, -16.75, -4.35, -10.4, -15.8, -8.5, -30.5, -18.9,
    -7.15, -5.4, -7.7, -14.55, -8.85, -20.55, -7.4, -11.9, -12.25, -25.1,
    -20.65, -13.3, -19.75, -14.45, -15.0, -13.4, -11.15, -21.3, -14.0, -19.25,
    -19.9, -10.6, -10.5, -12.45, -9.55, -18.6, -18.55, -15.8, -16.95, -13.55,
    -14.25, -9.8, -19.05, -10.8, -15.85, -17.2, -4.25, -9.2, -24.0, -12.55,
    -21.7, -19.15, -34.1, -15.85, -10.0, -15.5, -16.9, -17.55, -25.2, -13.1,
    -10.15, -18.8, -14.05, -13.6, -26.7, -33.25, -24.25, -17.3, -12.4, -22.0,
    -23.4, -20.05, -10.25, -5.35, -10.85, -4.7, -21.6, -19.65, -11.1, -8.05,
    -3.55, -16.6, -19.4, -13.55, -7.05, -13.75, -13.2, -21.2, -11.35, -20.55,
    -33.25, -20.95, -31.4, -10.8, -19.65, -29.05, -12.7, -30.5, -20.0, -3.25,
    -11.3, -21.5, -17.65, -23.85, -22.45, -12.5, -9.7, -19.9, -16.6, -7.25,
    -16.0, -14.6, -5.1, -17.4, -23.8, -39.15, -19.15, -11.65, -15.05
]

worst_fitness = [
    -148.0, -68.0, -158.0, -154.0, -93.0, -125.0, -179.0, -64.0, -181.0, -42.0,
    -152.0, -175.0, -61.0, -153.0, -133.0, -34.0, -177.0, -154.0, -199.0, -196.0,
    -160.0, -178.0, -49.0, -55.0, -195.0, -136.0, -35.0, -26.0, -119.0, -41.0,
    -61.0, -122.0, -56.0, -65.0, -127.0, -48.0, -46.0, -198.0, -194.0, -124.0,
    -100.0, -75.0, -195.0, -60.0, -63.0, -41.0, -24.0, -109.0, -194.0, -186.0,
    -114.0, -196.0, -47.0, -176.0, -42.0, -46.0, -66.0, -54.0, -40.0, -19.0,
    -61.0, -19.0, -25.0, -172.0, -73.0, -114.0, -34.0, -82.0, -18.0, -32.0,
    -69.0, -56.0, -58.0, -30.0, -128.0, -70.0, -147.0, -49.0, -71.0, -189.0,
    -37.0, -173.0, -37.0, -168.0, -39.0, -124.0, -195.0, -36.0, -196.0, -100.0,
    -107.0, -51.0, -115.0, -50.0, -43.0, -61.0, -77.0, -48.0, -107.0, -114.0,
    -56.0, -38.0, -109.0, -196.0, -128.0, -58.0, -53.0, -125.0, -86.0, -78.0,
    -104.0, -43.0, -33.0, -49.0, -31.0, -87.0, -101.0, -58.0, -195.0, -52.0,
    -68.0, -41.0, -197.0, -40.0, -126.0, -72.0, -25.0, -92.0, -97.0, -50.0,
    -94.0, -65.0, -173.0, -50.0, -58.0, -63.0, -55.0, -193.0, -196.0, -107.0,
    -49.0, -59.0, -51.0, -47.0, -199.0, -199.0, -140.0, -88.0, -60.0, -187.0,
    -154.0, -97.0, -39.0, -30.0, -125.0, -44.0, -154.0, -198.0, -99.0, -43.0,
    -64.0, -63.0, -69.0, -68.0, -54.0, -55.0, -57.0, -99.0, -46.0, -59.0,
    -198.0, -70.0, -194.0, -51.0, -193.0, -198.0, -56.0, -136.0, -169.0, -47.0,
    -50.0, -192.0, -72.0, -94.0, -159.0, -30.0, -50.0, -79.0, -70.0, -33.0,
    -100.0, -64.0, -43.0, -112.0, -87.0, -199.0, -124.0, -41.0, -55.0
]










# Plotting the graph
plt.rcParams.update({
    'font.size': 14,  # Adjust to meet specific size requirements
    'font.family': 'serif',  # Professional fonts: serif, Arial, Times New Roman, etc.
})
plt.figure(figsize=(12, 6))
plt.plot(generations, best_fitness, label='Best Fitness', color='blue', marker='o', linestyle='-', markersize=3)
plt.plot(generations2, average_fitness, label='Average Fitness', color='red', marker='o', linestyle='-', markersize=3)
plt.plot(generations2, worst_fitness, label='Worst Fitness', color='purple', marker='o', linestyle='-', markersize=3)
plt.axhline(43, label='LOS=99.99%', color='black')

# Star specific points
highlight_generations = [76, 93]  # Generations you want to highlight
highlight_best_fitness = [best_fitness[i-1] for i in highlight_generations]  # Substract 1 because Python uses 0-based indexing

# Use 'plot' for stars with large marker size
plt.plot(highlight_generations, highlight_best_fitness, 'r*', markersize=12, label='King of Hill Updated')

plt.title('Search Genetic Algorithm Fitness Over 200 Generations')
plt.xlabel('Generation')
plt.ylabel('Net Score (W=1 L=-1 D=0)')
plt.legend()
plt.grid(False)
plt.show()